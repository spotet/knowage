apiVersion: template.openshift.io/v1
kind: Template
message: |-
  Below the information of generated entries, tokens and passwords :

    APPLICATION                : ${APPLICATION}
    HMAC_KEY                   : ${HMAC_KEY}
    PASSWORD_ENCRYPTION_SECRET : ${PASSWORD_ENCRYPTION_SECRET}
    PUBLIC_ADDRESS             : ${PUBLIC_ADDRESS}

metadata:
  annotations:
    description: |
      This template deploys Knowage application.
    openshift.io/display-name: Claims Knowage
    iconClass: "icon-openshift"
    template.openshift.io/documentation-url: https://www.sigma.fr
    tags: claims,knowage
  name: knowage-claims

parameters:
- description: Application Name
  displayname: Application Name
  name: APPLICATION
  required: true
- description: Knowage version
  displayname: Knowage Version
  name: KNOWAGE_VERSION
  required: true
  value: '8.0.0'
- description: FQDN Public Route
  displayname: FQDN Public Route
  name: PUBLIC_ADDRESS
  required: true
  value: '127.0.0.1'
- description: MariaDB service name
  displayName: MariaDB Service Name
  name: MARIADB_SERVICE
  required: true
- description: Secret key to generate JWT tokens used by the default security mechanism
  displayName: Secret key to generate JWT tokens used by the default security mechanism
  from: '[a-z0-9]{6}'
  generate: expression
  name: HMAC_KEY
  required: true
- description: The password encryption secret
  displayName: The password encryption secret
  from: '[a-zA-Z0-9]{15}'
  generate: expression
  name: PASSWORD_ENCRYPTION_SECRET
  required: true

objects:
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION}
    name: ${APPLICATION}
  spec:
    replicas: 1
    revisionHistoryLimit: 3
    selector:
      app: ${APPLICATION}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APPLICATION}
      spec:
        containers:
        - env:
          - name: DB_ENV_MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: ${MARIADB_SERVICE}
          - name: DB_ENV_MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: ${MARIADB_SERVICE}
          - name: DB_ENV_MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: ${MARIADB_SERVICE}
          - name: DB_PORT_3306_TCP_ADDR
            value: ${MARIADB_SERVICE}
          - name: DB_PORT_3306_TCP_PORT
            value: "3306"
          - name: DB_DB
            valueFrom:
              secretKeyRef:
                key: database-name
                name: ${MARIADB_SERVICE}
          - name: DB_PORT
            value: "3306"
          - name: DB_HOST
            value: ${MARIADB_SERVICE}
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: ${MARIADB_SERVICE}
          - name: DB_PASS
            valueFrom:
              secretKeyRef:
                key: database-password
                name: ${MARIADB_SERVICE}
          - name: CACHE_DB_DB
            valueFrom:
              secretKeyRef:
                key: database-name
                name: ${MARIADB_SERVICE}
          - name: CACHE_DB_PORT
            value: "3306"
          - name: CACHE_DB_HOST
            value: ${MARIADB_SERVICE}
          - name: CACHE_DB_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: ${MARIADB_SERVICE}
          - name: CACHE_DB_PASS
            valueFrom:
              secretKeyRef:
                key: database-password
                name: ${MARIADB_SERVICE}
          - name: PUBLIC_ADDRESS
            value: ${PUBLIC_ADDRESS}
          - name: HMAC_KEY
            valueFrom:
              secretKeyRef:
                key: hmac-key
                name: ${APPLICATION}
          - name: PASSWORD_ENCRYPTION_SECRET
            valueFrom:
              secretKeyRef:
                key: password-encryption-secret
                name: ${APPLICATION}
          image: ""
          imagePullPolicy: Always
          name: ${APPLICATION}
          ports:
          - containerPort: 8009
            protocol: TCP
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          - containerPort: 8778
            protocol: TCP
          resources:
            limits:
              cpu: '1'
              memory: 3192Mi
            requests:
              cpu: 50m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /knowage
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /knowage
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION}
        from:
          kind: ImageStreamTag
          name: claims-knowage:${KNOWAGE_VERSION}
      type: ImageChange

- apiVersion: v1
  kind: Secret
  metadata:
    labels:
      app: ${APPLICATION}
    name: ${APPLICATION}
  stringData:
    hmac-key: ${HMAC_KEY}
    password-encryption-secret: ${PASSWORD_ENCRYPTION_SECRET}

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APPLICATION}
    name: ${APPLICATION}
  spec:
    ports:
    - name: 8009-tcp
      port: 8009
      protocol: TCP
      targetPort: 8009
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 8443
    - name: 8778-tcp
      port: 8778
      protocol: TCP
      targetPort: 8778
    selector:
      app: ${APPLICATION}
    sessionAffinity: None
    type: ClusterIP

- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: ${APPLICATION}
    name: ${APPLICATION}
  spec:
    host: ${APPLICATION}-spo-dev.paas-rec.sigma.fr
    port:
      targetPort: 8080
    tls:
      termination: edge
    to:
      kind: Service
      name: ${APPLICATION}
      weight: 100
    wildcardPolicy: None